{"ast":null,"code":"import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.animals()\n      }],\n      Comments: [{\n        User: {\n          id: shortId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n};\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    }\n  };\n}; // 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","faker","produce","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","animals","Comments","sentence","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","concat","length","error","unshift","filter","v","post","find","postId"],"sources":["/Users/eomseonghun/Desktop/react-nodebird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\nimport faker from 'faker';\n\nimport produce from '../util/produce';\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const generateDummyPost = (number) =>\n  Array(number)\n    .fill()\n    .map(() => ({\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName(),\n      },\n      content: faker.lorem.paragraph(),\n      Images: [\n        {\n          src: faker.image.animals(),\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            id: shortId.generate(),\n            nickname: faker.name.findName(),\n          },\n          content: faker.lorem.sentence(),\n        },\n      ],\n    }));\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: '제로초',\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초',\n  },\n});\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}