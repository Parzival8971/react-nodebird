{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/eomseonghun/Desktop/react-nodebird/prepare/front/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone,\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setCommentText = _useInput2[2];\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"uF1jqHkkXk4tcxRy8b/hOvUlZfg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["Button","Form","Input","React","useCallback","useEffect","PropTypes","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","state","addCommentDone","addCommentLoading","id","user","me","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","userId","postId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"sources":["/Users/eomseonghun/Desktop/react-nodebird/prepare/front/components/CommentForm.js"],"sourcesContent":["import { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({ post }) => {\n  const dispatch = useDispatch();\n  const { addCommentDone, addCommentLoading } = useSelector(\n    (state) => state.post\n  );\n  const id = useSelector((state) => state.user.me?.id);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, userId: id, postId: post.id },\n    });\n  }, [commentText, id]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\n        <Input.TextArea\n          rows={4}\n          value={commentText}\n          onChange={onChangeCommentText}\n        />\n        <Button\n          style={{ position: 'absolute', right: 0, bottom: -40, zIndex: 1 }}\n          type='primary'\n          htmlType='submit'\n          loading={addCommentLoading}\n        >\n          삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"],"mappings":";;;;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;EAAA;;EAAA,IAAXC,IAAW,QAAXA,IAAW;EAChC,IAAMC,QAAQ,GAAGN,WAAW,EAA5B;;EACA,mBAA8CC,WAAW,CACvD,UAACM,KAAD;IAAA,OAAWA,KAAK,CAACF,IAAjB;EAAA,CADuD,CAAzD;EAAA,IAAQG,cAAR,gBAAQA,cAAR;EAAA,IAAwBC,iBAAxB,gBAAwBA,iBAAxB;;EAGA,IAAMC,EAAE,GAAGT,WAAW,CAAC,UAACM,KAAD;IAAA;;IAAA,yBAAWA,KAAK,CAACI,IAAN,CAAWC,EAAtB,mDAAW,eAAeF,EAA1B;EAAA,CAAD,CAAtB;;EACA,gBAA2DR,QAAQ,CAAC,EAAD,CAAnE;EAAA;EAAA,IAAOW,WAAP;EAAA,IAAoBC,mBAApB;EAAA,IAAyCC,cAAzC;;EAEAjB,SAAS,CAAC,YAAM;IACd,IAAIU,cAAJ,EAAoB;MAClBO,cAAc,CAAC,EAAD,CAAd;IACD;EACF,CAJQ,EAIN,CAACP,cAAD,CAJM,CAAT;EAMA,IAAMQ,eAAe,GAAGnB,WAAW,CAAC,YAAM;IACxCS,QAAQ,CAAC;MACPW,IAAI,EAAEd,mBADC;MAEPe,IAAI,EAAE;QAAEC,OAAO,EAAEN,WAAX;QAAwBO,MAAM,EAAEV,EAAhC;QAAoCW,MAAM,EAAEhB,IAAI,CAACK;MAAjD;IAFC,CAAD,CAAR;EAID,CALkC,EAKhC,CAACG,WAAD,EAAcH,EAAd,CALgC,CAAnC;EAOA,OACE,MAAC,IAAD;IAAM,QAAQ,EAAEM,eAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAD,CAAM,IAAN;IAAW,KAAK,EAAE;MAAEM,QAAQ,EAAE,UAAZ;MAAwBC,MAAM,EAAE;IAAhC,CAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,KAAD,CAAO,QAAP;IACE,IAAI,EAAE,CADR;IAEE,KAAK,EAAEV,WAFT;IAGE,QAAQ,EAAEC,mBAHZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAME,MAAC,MAAD;IACE,KAAK,EAAE;MAAEQ,QAAQ,EAAE,UAAZ;MAAwBE,KAAK,EAAE,CAA/B;MAAkCC,MAAM,EAAE,CAAC,EAA3C;MAA+CC,MAAM,EAAE;IAAvD,CADT;IAEE,IAAI,EAAC,SAFP;IAGE,QAAQ,EAAC,QAHX;IAIE,OAAO,EAAEjB,iBAJX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBANF,CADF,CADF;AAmBD,CAxCD;;GAAML,W;UACaJ,W,EAC6BC,W,EAGnCA,W,EACgDC,Q;;;KANvDE,W;AA0CNA,WAAW,CAACuB,SAAZ,GAAwB;EACtBtB,IAAI,EAAEN,SAAS,CAAC6B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAezB,WAAf"},"metadata":{},"sourceType":"module"}