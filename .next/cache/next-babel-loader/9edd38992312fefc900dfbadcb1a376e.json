{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"/Users/eomseonghun/Desktop/react-nodebird/prepare/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, List, Comment, Popover } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nvar CardWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));\n_c = CardWrapper;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useState2 = useState(false),\n      liked = _useState2[0],\n      setLiked = _useState2[1];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  var id = me && me.id;\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return __jsx(CardWrapper, {\n    key: post.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, id && post.UserId === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        loading: removePostLoading,\n        onClick: onRemovePost,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }))],\n    extra: __jsx(FollowButton, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 24\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments ? post.Comments.length : 0, \" \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments || [],\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Link, {\n          href: {\n            pathname: '/user',\n            query: {\n              id: item.User.id\n            }\n          },\n          as: \"/user/\".concat(item.User.id),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }\n        }, __jsx(\"a\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 23\n          }\n        }, __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }\n        }, item.User.nickname[0]))),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(PostCard, \"5a5NKg3gFe4Mc+9tabNzmYpKj54=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    UserId: PropTypes.number,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"names":["React","useState","useCallback","Card","Button","Avatar","List","Comment","Popover","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","useDispatch","styled","Link","CommentForm","PostCardContent","PostImages","FollowButton","REMOVE_POST_REQUEST","CardWrapper","div","PostCard","post","dispatch","state","removePostLoading","commentFormOpened","setCommentFormOpened","liked","setLiked","user","me","id","onToggleComment","prev","onToggleLike","onRemovePost","type","data","Images","UserId","User","nickname","content","Comments","length","item","pathname","query","propTypes","shape","number","object","string","createdAt","arrayOf","any","isRequired"],"sources":["/Users/eomseonghun/Desktop/react-nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, List, Comment, Popover } from 'antd';\nimport PropTypes from 'prop-types';\nimport {\n  RetweetOutlined,\n  HeartTwoTone,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n} from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Link from 'next/link';\n\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\n\nconst CardWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst PostCard = ({ post }) => {\n  const dispatch = useDispatch();\n  const { removePostLoading } = useSelector((state) => state.post);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const [liked, setLiked] = useState(false);\n  const { me } = useSelector((state) => state.user);\n  const id = me && me.id;\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id,\n    });\n  }, []);\n\n  return (\n    <CardWrapper key={post.id}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key='retweet' />,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor='#eb2f96'\n              key='heart'\n              onClick={onToggleLike}\n            />\n          ) : (\n            <HeartOutlined key='heart' onClick={onToggleLike} />\n          ),\n          <MessageOutlined key='message' onClick={onToggleComment} />,\n          <Popover\n            key='ellipsis'\n            content={\n              <Button.Group>\n                {id && post.UserId === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button\n                      type='danger'\n                      loading={removePostLoading}\n                      onClick={onRemovePost}\n                    >\n                      삭제\n                    </Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        extra={<FollowButton post={post} />}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={<PostCardContent postData={post.content} />}\n        />\n      </Card>\n      {commentFormOpened && (\n        <>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments ? post.Comments.length : 0} 댓글`}\n            itemLayout='horizontal'\n            dataSource={post.Comments || []}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={\n                    <Link\n                      href={{ pathname: '/user', query: { id: item.User.id } }}\n                      as={`/user/${item.User.id}`}\n                    >\n                      <a>\n                        <Avatar>{item.User.nickname[0]}</Avatar>\n                      </a>\n                    </Link>\n                  }\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </>\n      )}\n    </CardWrapper>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    UserId: PropTypes.number,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}