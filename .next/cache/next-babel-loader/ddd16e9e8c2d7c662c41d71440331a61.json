{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  id: 1,\n  nickname: '제로초',\n  Posts: [],\n  Followings: [],\n  Followers: []\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\n\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const signUpAction = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport const loginAction = data => {\n  return {\n    type: LOG_IN,\n    data\n  };\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\nexport const signUp = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true,\n          user: dummyUser,\n          loginData: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"names":["dummyUser","id","nickname","Posts","Followings","Followers","initialState","isLoggedIn","user","signUpData","loginData","SIGN_UP","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT","signUpAction","data","type","signUpSuccess","loginAction","logoutAction","signUp","state","action"],"sources":["/Users/eomseonghun/Desktop/react-nodebird/prepare/front/reducers/user.js"],"sourcesContent":["const dummyUser = {\n  id: 1,\n  nickname: '제로초',\n  Posts: [],\n  Followings: [],\n  Followers: [],\n};\n\nexport const initialState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: {},\n  loginData: {},\n};\n\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const signUpAction = (data) => {\n  return {\n    type: SIGN_UP,\n    data,\n  };\n};\n\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS,\n};\n\nexport const loginAction = (data) => {\n  return {\n    type: LOG_IN,\n    data,\n  };\n};\nexport const logoutAction = {\n  type: LOG_OUT,\n};\nexport const signUp = (data) => {\n  return {\n    type: SIGN_UP,\n    data,\n  };\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN: {\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: dummyUser,\n        loginData: action.data,\n      };\n    }\n    case LOG_OUT: {\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    }\n    case SIGN_UP: {\n      return {\n        ...state,\n        signUpData: action.data,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;EAChBC,EAAE,EAAE,CADY;EAEhBC,QAAQ,EAAE,KAFM;EAGhBC,KAAK,EAAE,EAHS;EAIhBC,UAAU,EAAE,EAJI;EAKhBC,SAAS,EAAE;AALK,CAAlB;AAQA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,UAAU,EAAE,KADc;EAE1BC,IAAI,EAAE,IAFoB;EAG1BC,UAAU,EAAE,EAHc;EAI1BC,SAAS,EAAE;AAJe,CAArB;AAOP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;EACpC,OAAO;IACLC,IAAI,EAAER,OADD;IAELO;EAFK,CAAP;AAID,CALM;AAOP,OAAO,MAAME,aAAa,GAAG;EAC3BD,IAAI,EAAEP;AADqB,CAAtB;AAIP,OAAO,MAAMS,WAAW,GAAIH,IAAD,IAAU;EACnC,OAAO;IACLC,IAAI,EAAEN,MADD;IAELK;EAFK,CAAP;AAID,CALM;AAMP,OAAO,MAAMI,YAAY,GAAG;EAC1BH,IAAI,EAAEH;AADoB,CAArB;AAGP,OAAO,MAAMO,MAAM,GAAIL,IAAD,IAAU;EAC9B,OAAO;IACLC,IAAI,EAAER,OADD;IAELO;EAFK,CAAP;AAID,CALM;AAOP,gBAAe,CAACM,KAAK,GAAGlB,YAAT,EAAuBmB,MAAvB,KAAkC;EAC/C,QAAQA,MAAM,CAACN,IAAf;IACE,KAAKN,MAAL;MAAa;QACX,uCACKW,KADL;UAEEjB,UAAU,EAAE,IAFd;UAGEC,IAAI,EAAER,SAHR;UAIEU,SAAS,EAAEe,MAAM,CAACP;QAJpB;MAMD;;IACD,KAAKF,OAAL;MAAc;QACZ,uCACKQ,KADL;UAEEjB,UAAU,EAAE,KAFd;UAGEC,IAAI,EAAE;QAHR;MAKD;;IACD,KAAKG,OAAL;MAAc;QACZ,uCACKa,KADL;UAEEf,UAAU,EAAEgB,MAAM,CAACP;QAFrB;MAID;;IACD;MAAS;QACP,yBACKM,KADL;MAGD;EA1BH;AA4BD,CA7BD"},"metadata":{},"sourceType":"module"}